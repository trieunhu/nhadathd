<?php

namespace frontend\modules\home\models;

use Yii;

class MemberRegister extends \common\models\Member
{
    public $verifyCode;
    public $password_repeat;
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [

            ['username', 'unique', 'targetClass' => '\common\models\Member', 'message' => \Yii::t('app', 'Đã tồn tại tên đăng nhập')],
            ['email', 'unique', 'targetClass' => '\common\models\Member', 'message' => \Yii::t('app', 'Đã tồn tại email')],
            ['mobile', 'unique', 'targetClass' => '\common\models\Member', 'message' => \Yii::t('app', 'Đã tồn tại số điện thoại')],
            [['username', 'display_name','verifyCode', 'mobile', 'password', 'password_repeat',  'email'], 'required'],
            ['verifyCode', 'captcha', 'captchaAction'=>'home/member/captcha'],
            ['password_repeat', 'compare', 'compareAttribute'=>'password', 'message'=>"Hai mật khẩu không giống nhau" ],
            [['password','password_repeat'], 'string', 'min' => 6],
            [['username'], 'string', 'max' => 25],
            [['display_name'], 'string', 'max' => 100],
            ['username', 'checkUserName'],
            [['mobile'], 'string', 'max' => 20],
        ];
    }
    public function checkUserName($attribute, $params) {
        if (is_numeric($this->username)) {
            $this->addError($attribute, "Tên đăng nhập phải tồn tại cả chữ");
        }
        if ($this->checkUserAdmin($this->username)) {
            $this->addError($attribute, "Tên đăng nhập đã tồn tại");
        }
    }

    public function checkUserAdmin($str) {
        $list = [
            'admin',
            'mod',
            'administrator',
            'quantri',
        ];
        foreach ($list as $value) {
            if (stripos(strtolower($str), strtolower($value)) !== false) {
                return TRUE;
            }
        }
        return FALSE;
    }
    public function beforeSave($insert)
    {
        $this->password = $this->setPassword($this->password);
        $this->status = self::STATUS_START;
        $this->address ="dia chi";
        $this->updated_at = date('Y-m-d H:i:s');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'username' => Yii::t('app', 'Tên đăng nhập'),
            'display_name' => Yii::t('app', 'Họ và tên'),
            'mobile' => Yii::t('app', 'Số điện thoại'),
            'address' => Yii::t('app', 'Địa chỉ'),
            'parent_id' => Yii::t('app', 'Parent ID'),
            'password' => Yii::t('app', 'Mật khẩu'),
            'password_repeat' => Yii::t('app', 'Nhắc lại mật khẩu'),
            'verifyCode' => Yii::t('app', 'Mã xác thực'),
            'email' => Yii::t('app', 'Email'),
            'auth_key' => Yii::t('app', 'Auth Key'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'status' => Yii::t('app', 'Status'),
        ];
    }
}
